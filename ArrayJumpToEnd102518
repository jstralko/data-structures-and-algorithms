Given an array of non-negative integers, you are initially positioned at the first element of the array.

Each integer represents your maximum jump length at that position.

Determine if you can reach the last element.

Example:

Input: [1,3,0,1,2]
[G, G, B, G, G]

Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.

Input: [4, 3, 2, 1, 0, 1]
[B, B, B, B, B, G]


public boolean canJumpToEndOfArray(int[] array) {
    //-1 bad, 0, Unknown, 1 Good
    int[] state = new array[array.length];
    state[array.length -1] = 1;

    for (int i = array.length - 2; i >= 0; i--) {
        for (int j = array[i]; j > 0; j--) {
            if (state[i + j] == 1) {
                state[i] = 1;
            } else {
                state[i] = -1;
            }
        }
    }

    return state[0] == 1;
}
