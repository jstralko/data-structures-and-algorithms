Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

For example, given the following binary tree.

    5
   / \
  3  10
    /  \
   18   7

Its minimum depth is 2.

class TreeNode {

    public TreeNode left;
    public TreeNode right;
    public int value;
}

int findMinDepth(TreeNode node) {

    if (node == null) return 0;

    int leftHeight = findMinDepth(node.left) + 1;
    int rightHeight = findMinDepth(node.right) + 1;

    return Math.min(leftHeight, rightHeight);
}

//Empty, null Tree
//
// One Node
//    5

// Full, Complete tree:
/*    5
     / \
    10  12
    /\  /\
    1 2 3 4
*/

/* Unbalanced left side
      5
     /\
    10 3
    /
   1
  /
 2
*/

/* Unbalanced right side

     5
    /\
    1 3
      /\
      4 6
         \
          7
*/
